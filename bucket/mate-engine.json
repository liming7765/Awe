{
    "version": "2.1.2",
    "description": "A free Desktop Mate alternative with a lightweight interface and custom VRM support, though with more features.",
    "homepage": "https://github.com/shinyflvre/Mate-Engine",
    "license": {
        "identifier": "AGPL-3.0-only",
        "url": "https://raw.githubusercontent.com/shinyflvre/Mate-Engine/refs/heads/main/LICENSE"
    },
    "architecture": {
        "64bit": {
            "url": "https://github.com/shinyflvre/Mate-Engine/releases/download/Public-Release-2.1.2/Public.Release.2.1.2.zip",
            "hash": "cf9bf479c8c60f5245a68ffcf348023c66a0d9b3534b1510057242461fb945bf"
        }
    },
    "shortcuts": [
        [
            "MateEngineX.exe",
            "Mate Engine"
        ]
    ],
    "persist": [
        "config",
        "backup"
    ],
    "installer": {
        "script": [
            "# Define paths for settings",
            "$configPath = \"$persist_dir\\config\"",
            "$targetPath = \"$env:USERPROFILE\\AppData\\LocalLow\\Shinymoon\\MateEngineX\"",
            "ensure $configPath | Out-Null",
            "",
            "# If AppData folder exists and is not a link, move its contents to persist dir",
            "if (Test-Path $targetPath -And -Not (Get-Item $targetPath).LinkType) {",
            "    Write-Host \"Moving existing settings from '$targetPath' to '$configPath'...\"",
            "    Move-Item \"$targetPath\\*\" $configPath -Force",
            "    Remove-Item $targetPath -Recurse -Force",
            "}",
            "",
            "# Create a junction link from AppData to the persist dir",
            "if (-not (Test-Path $targetPath)) {",
            "    Write-Host \"Creating junction link for settings...\"",
            "    New-Item -ItemType Junction -Path $targetPath -Target $configPath | Out-Null",
            "}"
        ]
    },
    "post_install": [
        "# Restore .gguf models after installation/update",
        "if (Test-Path \"$persist_dir\\backup\") {",
        "    Get-ChildItem \"$persist_dir\\backup\\*\" -Include '*.gguf' | Move-Item -Force -Destination \"$dir\\MateEngineX_Data\\StreamingAssets\\\"",
        "}"
    ],
    "pre_uninstall": [
        "# Backup .gguf models before uninstallation",
        "Get-ChildItem \"$dir\\MateEngineX_Data\\StreamingAssets\\*\" -Include '*.gguf' | Move-Item -Force -Destination \"$persist_dir\\backup\" -ErrorAction SilentlyContinue",
        "",
        "# Remove the junction link from AppData",
        "$targetPath = \"$env:USERPROFILE\\AppData\\LocalLow\\Shinymoon\\MateEngineX\"",
        "if (Test-Path $targetPath) {",
        "    Remove-Item $targetPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}"
    ],
    "notes": [
        "Mate Engine has been configured to be portable.",
        "Settings are stored in: '$persist_dir\\config'",
        "Model backups (*.gguf) are stored in: '$persist_dir\\backup'",
        "Run 'scoop uninstall -p mate-engine' to remove all data."
    ],
    "checkver": {
        "url": "https://github.com/shinyflvre/Mate-Engine/releases.atom",
        "regex": "Repository/\\d+/Public-Release-(.+?)<"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/shinyflvre/Mate-Engine/releases/download/Public-Release-$version/Public.Release.$version.zip"
            }
        }
    }
}
